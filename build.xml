<?xml version="1.0" encoding="UTF-8"?>
<!--
  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License version 2
  as published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License along
  with this program; if not, see <http://www.gnu.org/licenses/>
 -->
<project default="all" basedir="." xmlns:cs="antlib:com.puppycrawl.tools.checkstyle.ant">
    <property name="mainJar" value="Puzzler.jar" />
    <property name="mainJarFat" value="PuzzlerFat.jar" />
    <property name="destDir" value="bin" />
    <property name="fatDir" value="fat" />
    <property name="javadoc" value="res/doc/javadoc" />
    <property name="srcDir" value="src" />
    <property name="testsDir" value="tests" />
    <property name="instrumented.dir" value="tests/bin" />
    <property name="testResDir" value="results" />

    <property name="cobertura.dir" value="lib/cobertura-2.1.1" />

    <path id="cobertura.classpath">
        <fileset dir="${cobertura.dir}">
            <include name="cobertura-2.1.1.jar" />
        </fileset>
        <pathelement path="lib/cobertura-2.1.1/lib/asm-5.0.1.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/asm-analysis-5.0.1.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/asm-commons-5.0.1.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/asm-tree-5.0.1.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/asm-util-5.0.1.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/commons-lang3-3.3.2.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/hamcrest-core-1.3.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/jaxen-1.1.4.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/jetty-6.1.14.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/jetty-util-6.1.14.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/junit-4.11.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/logback-classic-1.0.13.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/logback-core-1.0.13.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/oro-2.0.8.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/servlet-api-2.5-6.1.14.jar"/>
        <pathelement path="lib/cobertura-2.1.1/lib/slf4j-api-1.7.5.jar"/>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />


    <path id="project.class.path">
        <pathelement location="lib/slf4j-1.7.5/slf4j-api-1.7.5.jar"/>
        <pathelement path="lib/logback-1.0.13/logback-core-1.0.13.jar"/>
        <pathelement path="lib/logback-1.0.13/logback-classic-1.0.13.jar"/>
        <pathelement path="lib/jdom-2.0.6/jdom-2.0.6.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/xmlrpc-client-3.1.3.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/xmlrpc-common-3.1.3.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/commons-logging-1.1.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/ws-commons-util-1.0.2.jar"/>
    </path>

    <path id="junit.class.path">
        <pathelement location="lib/slf4j-1.7.5/slf4j-api-1.7.5.jar"/>
        <pathelement path="lib/logback-1.0.13/logback-core-1.0.13.jar"/>
        <pathelement path="lib/logback-1.0.13/logback-classic-1.0.13.jar"/>
        <pathelement path="lib/jdom-2.0.6/jdom-2.0.6.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/xmlrpc-client-3.1.3.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/xmlrpc-common-3.1.3.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/commons-logging-1.1.jar"/>
        <pathelement path="lib/apache-xmlrpc-3.1.3/lib/ws-commons-util-1.0.2.jar"/>
        <!-- for JUnit : -->
        <pathelement path="lib/junit4-4.12.jar"/>
        <pathelement path="lib/hamcrest-core-1.3.jar"/>
        <pathelement path="lib/system-rules-1.16.0/system-rules-1.16.0.jar"/>
        <pathelement path="${destDir}"/>
    </path>

    <manifestclasspath property="pm.cp" jarfile="${mainJar}">
       <classpath refid="project.class.path" />
    </manifestclasspath>

    <target name="clean" description="delete everything that might have previously been created" >
        <delete dir="${destDir}"/>
        <delete dir="${fatDir}"/>
        <delete file="${mainJar}"></delete>
        <delete file="${mainJarFat}"></delete>
        <delete dir="${javadoc}"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for building" >
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
        </tstamp>
        <mkdir dir="${destDir}"/>
        <!-- Gets the Head commit id-->
        <exec executable = "git" output="${destDir}/commit-id" failifexecutionfails="no">
            <arg value = "rev-parse" />
            <arg value = "HEAD" />
        </exec>
        <!-- checks if changes to Head have been made in the working copy -->
        <exec executable = "git" output="${destDir}/commit-id" append="true" failifexecutionfails="no">
            <arg value = "diff" />
            <arg value = "--shortstat" />
        </exec>
    </target>

    <target name="compile" depends="prepare" description="compile *.java to *.class">
        <javac srcdir="${srcDir}" destdir="${destDir}" includeantruntime="false" debug="true" debuglevel="lines,vars,source">
            <classpath refid="project.class.path"/>
        </javac>
    </target>

    <target name="jar" depends="compile" description="create the Jar File">
        <jar destfile="${mainJar}" update="false">
            <fileset dir="${destDir}">
                <include name="**/*.class" />
                <include name="commit-id" />
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="de.nomagic.puzzler.PuzzlerMain" />
                <attribute name="Class-Path" value=". ${pm.cp}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Built-Date" value="${TODAY}"/>
            </manifest>
        </jar>
    </target>

    <target name="fatjar" depends="compile" description="create the fat Jar File">
        <unzip src="lib/slf4j-1.7.5/slf4j-api-1.7.5.jar" dest="${fatDir}"/>
        <unzip src="lib/logback-1.0.13/logback-core-1.0.13.jar" dest="${fatDir}"/>
        <unzip src="lib/logback-1.0.13/logback-classic-1.0.13.jar" dest="${fatDir}"/>
        <unzip src="lib/jdom-2.0.6/jdom-2.0.6.jar" dest="${fatDir}"/>
        <delete file="${fatDir}/META-INF/MANIFEST.MF"></delete>
        <jar destfile="${mainJarFat}" update="false">
            <fileset dir="${fatDir}">
                <include name="**/*" />
            </fileset>
            <fileset dir="${destDir}">
                <include name="**/*.class" />
                <include name="commit-id" />
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="de.nomagic.puzzler.PuzzlerMain" />
                <attribute name="Class-Path" value="."/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Built-Date" value="${TODAY}"/>
            </manifest>
        </jar>
        <delete dir="${fatDir}"/>
    </target>

    <target name="javadoc" description="create Documentation" >
        <javadoc packagenames="de.nomagic.*"
                 sourcepath="${srcDir}"
                 destdir="${javadoc}"
                 Version="yes"
                 Use="yes"
                 Author="yes"
                 serialwarn="yes"
                 Encoding="UTF-8">
            <classpath refid="project.class.path"/>
        </javadoc>
    </target>

    <target name="stylecheck">
        <taskdef resource="checkstyletask.properties">
            <classpath refid="project.class.path"/>
        </taskdef>
        <cs:checkstyle config="checkstyle-rules.xml" failOnViolation="false">
            <classpath refid="project.class.path"/>
            <fileset dir="${srcDir}">
                <include name="**/*.java"/>
            </fileset>
            <formatter type="plain"/>
            <formatter type="xml" toFile="checkstyle-result.xml"/>
        </cs:checkstyle>
    </target>

    <target name="unittest" depends="prepare" >
        <delete dir="${testResDir}"/>
        <delete dir="${instrumented.dir}"/>
        <delete file="cobertura.ser" />
        <mkdir dir="${testResDir}"/>
        <mkdir dir="${instrumented.dir}"/>

        <javac srcdir="${srcDir}" destdir="${destDir}" includeantruntime="false"
          source="1.8" target="1.8" debug="true" debuglevel="lines,vars,source" >
            <classpath refid="project.class.path"/>
        </javac>

        <javac srcdir="${testsDir}" destdir="${destDir}" includeantruntime="false"
             source="1.8" target="1.8" debug="true" debuglevel="lines,vars,source" >
            <classpath refid="junit.class.path"/>
        </javac>

        <cobertura-instrument todir="${instrumented.dir}">
            <ignore regex="org.apache.log4j.*" />
            <fileset dir="${destDir}">
                <include name="**/*.class" />
                <exclude name="**/*Test.class" />
            </fileset>
        </cobertura-instrument>

        <junit fork="yes" printsummary="yes" haltonfailure="no">
            <sysproperty key="net.sourceforge.cobertura.datafile" file="cobertura.ser" />
            <classpath location="${instrumented.dir}" />
            <classpath refid="project.class.path"/>
            <classpath refid="junit.class.path"/>
            <classpath refid="cobertura.classpath" />
            <formatter type="plain"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${testResDir}">
                <fileset dir="${testsDir}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>

        <cobertura-report format="html" destdir="${testResDir}" srcdir="${srcDir}" />
        <cobertura-report format="xml" destdir="${testResDir}" srcdir="${srcDir}" />
    </target>

    <target name="test" depends="unittest">
    </target>

    <target name="runTests">
        <exec executable="/bin/bash">
            <arg value="runTests.sh"/>
        </exec>
    </target>

    <target name="all" depends="jar">
    </target>
</project>
