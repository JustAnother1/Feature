File Format Specification - Environment File
============================================
:toc:
:numbered:
:showcomments:

== Summary
This document defines the file format for environment files.
Environment files describe the environment that the solution should execute in.

== File format
Environment files are xml files. The root element is a "environment" element.

=== environment element
Is the root element.

==== Attributes
None.

==== child elements
The environment element must have a exactly one "tool" element.
The environment element can have a maximum of one "resources" element.
The environment element can have a maximum of one "lib" element.

=== tool element
This defines the platform / type of environment. This information is then used to select the right tool chain for the project.

==== Attributes
the "name" attribute contains the name of the platform. The platform is a string that can be used as a name for a directory in the file system. It may also contain the slash('/') character. The slash then splits the platform name into separate parts. That can be used to organize platform variants.  

==== child elements
None.

=== resources element
This element contains all resources that are available in the environment.

==== Attributes
None.

==== child elements
It can have zero, one or many child elements. All child elements have to comply with the resource style.

=== resource style
The tag of elements that comply to this style is the name of the resource that the element defines.

==== Attributes
The element needs to have the "algorithm" attribute. The "algorithm" attribute defines the algorithm that the resource implements. It can have further attributes to provide configuration information to the algorithm implementing the resource.

==== child elements
None.

=== lib element
Sometimes it might be necessary to provide some algorithms that are not directly referred to by the solution. These are usually algorithms that are just expected to be available by the implementations of the algorithms used in the solution. Examples are functionality provided by standard libraries. 

==== Attributes
None.

==== child elements
It can have zero, one or many child elements. All child elements have to comply with the algorithm reference style.

=== algorithm reference style
The tag of elements that comply to this style is the name of the algorithm that the element defines.

==== Attributes
The element needs to have the "algorithm" attribute. The "algorithm" attribute defines the algorithm that the resource implements.

==== child elements
None.


== Example

[source,xml]
----
<?xml version="1.0" encoding="utf-8" ?>
<environment>
  <tool name="AVR/atmega2560"/>>
  <resources>
      <greenLed algorithm="digital out" port="A" pin="3" />
  </resources>
</environment>
----
